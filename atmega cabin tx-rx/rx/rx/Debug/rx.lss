
rx.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000532  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000586  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000586  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000005b8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000e0  00000000  00000000  000005f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001091  00000000  00000000  000006d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007f4  00000000  00000000  00001765  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000909  00000000  00000000  00001f59  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001d0  00000000  00000000  00002864  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004e1  00000000  00000000  00002a34  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000009e8  00000000  00000000  00002f15  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000b0  00000000  00000000  000038fd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 2d 02 	call	0x45a	; 0x45a <main>
  64:	0c 94 97 02 	jmp	0x52e	; 0x52e <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_F_Set_Pin_Dir>:
			break;
			case PC:
			PORTC = 0xFF;
			break;
			case PD:
			PORTD = 0xFF;
  6c:	44 23       	and	r20, r20
  6e:	19 f0       	breq	.+6      	; 0x76 <DIO_F_Set_Pin_Dir+0xa>
  70:	41 30       	cpi	r20, 0x01	; 1
  72:	c9 f1       	breq	.+114    	; 0xe6 <DIO_F_Set_Pin_Dir+0x7a>
  74:	08 95       	ret
  76:	81 30       	cpi	r24, 0x01	; 1
  78:	91 f0       	breq	.+36     	; 0x9e <DIO_F_Set_Pin_Dir+0x32>
  7a:	28 f0       	brcs	.+10     	; 0x86 <DIO_F_Set_Pin_Dir+0x1a>
  7c:	82 30       	cpi	r24, 0x02	; 2
  7e:	d9 f0       	breq	.+54     	; 0xb6 <DIO_F_Set_Pin_Dir+0x4a>
  80:	83 30       	cpi	r24, 0x03	; 3
  82:	29 f1       	breq	.+74     	; 0xce <DIO_F_Set_Pin_Dir+0x62>
  84:	08 95       	ret
  86:	2a b3       	in	r18, 0x1a	; 26
  88:	81 e0       	ldi	r24, 0x01	; 1
  8a:	90 e0       	ldi	r25, 0x00	; 0
  8c:	02 c0       	rjmp	.+4      	; 0x92 <DIO_F_Set_Pin_Dir+0x26>
  8e:	88 0f       	add	r24, r24
  90:	99 1f       	adc	r25, r25
  92:	6a 95       	dec	r22
  94:	e2 f7       	brpl	.-8      	; 0x8e <DIO_F_Set_Pin_Dir+0x22>
  96:	80 95       	com	r24
  98:	82 23       	and	r24, r18
  9a:	8a bb       	out	0x1a, r24	; 26
  9c:	08 95       	ret
  9e:	27 b3       	in	r18, 0x17	; 23
  a0:	81 e0       	ldi	r24, 0x01	; 1
  a2:	90 e0       	ldi	r25, 0x00	; 0
  a4:	02 c0       	rjmp	.+4      	; 0xaa <DIO_F_Set_Pin_Dir+0x3e>
  a6:	88 0f       	add	r24, r24
  a8:	99 1f       	adc	r25, r25
  aa:	6a 95       	dec	r22
  ac:	e2 f7       	brpl	.-8      	; 0xa6 <DIO_F_Set_Pin_Dir+0x3a>
  ae:	80 95       	com	r24
  b0:	82 23       	and	r24, r18
  b2:	87 bb       	out	0x17, r24	; 23
  b4:	08 95       	ret
  b6:	24 b3       	in	r18, 0x14	; 20
  b8:	81 e0       	ldi	r24, 0x01	; 1
  ba:	90 e0       	ldi	r25, 0x00	; 0
  bc:	02 c0       	rjmp	.+4      	; 0xc2 <DIO_F_Set_Pin_Dir+0x56>
  be:	88 0f       	add	r24, r24
  c0:	99 1f       	adc	r25, r25
  c2:	6a 95       	dec	r22
  c4:	e2 f7       	brpl	.-8      	; 0xbe <DIO_F_Set_Pin_Dir+0x52>
  c6:	80 95       	com	r24
  c8:	82 23       	and	r24, r18
  ca:	84 bb       	out	0x14, r24	; 20
  cc:	08 95       	ret
  ce:	21 b3       	in	r18, 0x11	; 17
  d0:	81 e0       	ldi	r24, 0x01	; 1
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	02 c0       	rjmp	.+4      	; 0xda <DIO_F_Set_Pin_Dir+0x6e>
  d6:	88 0f       	add	r24, r24
  d8:	99 1f       	adc	r25, r25
  da:	6a 95       	dec	r22
  dc:	e2 f7       	brpl	.-8      	; 0xd6 <DIO_F_Set_Pin_Dir+0x6a>
  de:	80 95       	com	r24
  e0:	82 23       	and	r24, r18
  e2:	81 bb       	out	0x11, r24	; 17
  e4:	08 95       	ret
  e6:	81 30       	cpi	r24, 0x01	; 1
  e8:	89 f0       	breq	.+34     	; 0x10c <DIO_F_Set_Pin_Dir+0xa0>
  ea:	28 f0       	brcs	.+10     	; 0xf6 <DIO_F_Set_Pin_Dir+0x8a>
  ec:	82 30       	cpi	r24, 0x02	; 2
  ee:	c9 f0       	breq	.+50     	; 0x122 <DIO_F_Set_Pin_Dir+0xb6>
  f0:	83 30       	cpi	r24, 0x03	; 3
  f2:	11 f1       	breq	.+68     	; 0x138 <DIO_F_Set_Pin_Dir+0xcc>
  f4:	08 95       	ret
  f6:	2a b3       	in	r18, 0x1a	; 26
  f8:	81 e0       	ldi	r24, 0x01	; 1
  fa:	90 e0       	ldi	r25, 0x00	; 0
  fc:	02 c0       	rjmp	.+4      	; 0x102 <DIO_F_Set_Pin_Dir+0x96>
  fe:	88 0f       	add	r24, r24
 100:	99 1f       	adc	r25, r25
 102:	6a 95       	dec	r22
 104:	e2 f7       	brpl	.-8      	; 0xfe <DIO_F_Set_Pin_Dir+0x92>
 106:	82 2b       	or	r24, r18
 108:	8a bb       	out	0x1a, r24	; 26
 10a:	08 95       	ret
 10c:	27 b3       	in	r18, 0x17	; 23
 10e:	81 e0       	ldi	r24, 0x01	; 1
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	02 c0       	rjmp	.+4      	; 0x118 <DIO_F_Set_Pin_Dir+0xac>
 114:	88 0f       	add	r24, r24
 116:	99 1f       	adc	r25, r25
 118:	6a 95       	dec	r22
 11a:	e2 f7       	brpl	.-8      	; 0x114 <DIO_F_Set_Pin_Dir+0xa8>
 11c:	82 2b       	or	r24, r18
 11e:	87 bb       	out	0x17, r24	; 23
 120:	08 95       	ret
 122:	24 b3       	in	r18, 0x14	; 20
 124:	81 e0       	ldi	r24, 0x01	; 1
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	02 c0       	rjmp	.+4      	; 0x12e <DIO_F_Set_Pin_Dir+0xc2>
 12a:	88 0f       	add	r24, r24
 12c:	99 1f       	adc	r25, r25
 12e:	6a 95       	dec	r22
 130:	e2 f7       	brpl	.-8      	; 0x12a <DIO_F_Set_Pin_Dir+0xbe>
 132:	82 2b       	or	r24, r18
 134:	84 bb       	out	0x14, r24	; 20
 136:	08 95       	ret
 138:	21 b3       	in	r18, 0x11	; 17
 13a:	81 e0       	ldi	r24, 0x01	; 1
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	02 c0       	rjmp	.+4      	; 0x144 <DIO_F_Set_Pin_Dir+0xd8>
 140:	88 0f       	add	r24, r24
 142:	99 1f       	adc	r25, r25
 144:	6a 95       	dec	r22
 146:	e2 f7       	brpl	.-8      	; 0x140 <DIO_F_Set_Pin_Dir+0xd4>
 148:	82 2b       	or	r24, r18
 14a:	81 bb       	out	0x11, r24	; 17
 14c:	08 95       	ret

0000014e <DIO_F_Set_Pin_Val>:
 14e:	44 23       	and	r20, r20
 150:	19 f0       	breq	.+6      	; 0x158 <DIO_F_Set_Pin_Val+0xa>
 152:	41 30       	cpi	r20, 0x01	; 1
 154:	c9 f1       	breq	.+114    	; 0x1c8 <DIO_F_Set_Pin_Val+0x7a>
 156:	08 95       	ret
 158:	81 30       	cpi	r24, 0x01	; 1
 15a:	91 f0       	breq	.+36     	; 0x180 <DIO_F_Set_Pin_Val+0x32>
 15c:	28 f0       	brcs	.+10     	; 0x168 <DIO_F_Set_Pin_Val+0x1a>
 15e:	82 30       	cpi	r24, 0x02	; 2
 160:	d9 f0       	breq	.+54     	; 0x198 <DIO_F_Set_Pin_Val+0x4a>
 162:	83 30       	cpi	r24, 0x03	; 3
 164:	29 f1       	breq	.+74     	; 0x1b0 <DIO_F_Set_Pin_Val+0x62>
 166:	08 95       	ret
 168:	2b b3       	in	r18, 0x1b	; 27
 16a:	81 e0       	ldi	r24, 0x01	; 1
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	02 c0       	rjmp	.+4      	; 0x174 <DIO_F_Set_Pin_Val+0x26>
 170:	88 0f       	add	r24, r24
 172:	99 1f       	adc	r25, r25
 174:	6a 95       	dec	r22
 176:	e2 f7       	brpl	.-8      	; 0x170 <DIO_F_Set_Pin_Val+0x22>
 178:	80 95       	com	r24
 17a:	82 23       	and	r24, r18
 17c:	8b bb       	out	0x1b, r24	; 27
 17e:	08 95       	ret
 180:	28 b3       	in	r18, 0x18	; 24
 182:	81 e0       	ldi	r24, 0x01	; 1
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	02 c0       	rjmp	.+4      	; 0x18c <DIO_F_Set_Pin_Val+0x3e>
 188:	88 0f       	add	r24, r24
 18a:	99 1f       	adc	r25, r25
 18c:	6a 95       	dec	r22
 18e:	e2 f7       	brpl	.-8      	; 0x188 <DIO_F_Set_Pin_Val+0x3a>
 190:	80 95       	com	r24
 192:	82 23       	and	r24, r18
 194:	88 bb       	out	0x18, r24	; 24
 196:	08 95       	ret
 198:	25 b3       	in	r18, 0x15	; 21
 19a:	81 e0       	ldi	r24, 0x01	; 1
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	02 c0       	rjmp	.+4      	; 0x1a4 <DIO_F_Set_Pin_Val+0x56>
 1a0:	88 0f       	add	r24, r24
 1a2:	99 1f       	adc	r25, r25
 1a4:	6a 95       	dec	r22
 1a6:	e2 f7       	brpl	.-8      	; 0x1a0 <DIO_F_Set_Pin_Val+0x52>
 1a8:	80 95       	com	r24
 1aa:	82 23       	and	r24, r18
 1ac:	85 bb       	out	0x15, r24	; 21
 1ae:	08 95       	ret
 1b0:	22 b3       	in	r18, 0x12	; 18
 1b2:	81 e0       	ldi	r24, 0x01	; 1
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	02 c0       	rjmp	.+4      	; 0x1bc <DIO_F_Set_Pin_Val+0x6e>
 1b8:	88 0f       	add	r24, r24
 1ba:	99 1f       	adc	r25, r25
 1bc:	6a 95       	dec	r22
 1be:	e2 f7       	brpl	.-8      	; 0x1b8 <DIO_F_Set_Pin_Val+0x6a>
 1c0:	80 95       	com	r24
 1c2:	82 23       	and	r24, r18
 1c4:	82 bb       	out	0x12, r24	; 18
 1c6:	08 95       	ret
 1c8:	81 30       	cpi	r24, 0x01	; 1
 1ca:	89 f0       	breq	.+34     	; 0x1ee <DIO_F_Set_Pin_Val+0xa0>
 1cc:	28 f0       	brcs	.+10     	; 0x1d8 <DIO_F_Set_Pin_Val+0x8a>
 1ce:	82 30       	cpi	r24, 0x02	; 2
 1d0:	c9 f0       	breq	.+50     	; 0x204 <DIO_F_Set_Pin_Val+0xb6>
 1d2:	83 30       	cpi	r24, 0x03	; 3
 1d4:	11 f1       	breq	.+68     	; 0x21a <DIO_F_Set_Pin_Val+0xcc>
 1d6:	08 95       	ret
 1d8:	2b b3       	in	r18, 0x1b	; 27
 1da:	81 e0       	ldi	r24, 0x01	; 1
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	02 c0       	rjmp	.+4      	; 0x1e4 <DIO_F_Set_Pin_Val+0x96>
 1e0:	88 0f       	add	r24, r24
 1e2:	99 1f       	adc	r25, r25
 1e4:	6a 95       	dec	r22
 1e6:	e2 f7       	brpl	.-8      	; 0x1e0 <DIO_F_Set_Pin_Val+0x92>
 1e8:	82 2b       	or	r24, r18
 1ea:	8b bb       	out	0x1b, r24	; 27
 1ec:	08 95       	ret
 1ee:	28 b3       	in	r18, 0x18	; 24
 1f0:	81 e0       	ldi	r24, 0x01	; 1
 1f2:	90 e0       	ldi	r25, 0x00	; 0
 1f4:	02 c0       	rjmp	.+4      	; 0x1fa <DIO_F_Set_Pin_Val+0xac>
 1f6:	88 0f       	add	r24, r24
 1f8:	99 1f       	adc	r25, r25
 1fa:	6a 95       	dec	r22
 1fc:	e2 f7       	brpl	.-8      	; 0x1f6 <DIO_F_Set_Pin_Val+0xa8>
 1fe:	82 2b       	or	r24, r18
 200:	88 bb       	out	0x18, r24	; 24
 202:	08 95       	ret
 204:	25 b3       	in	r18, 0x15	; 21
 206:	81 e0       	ldi	r24, 0x01	; 1
 208:	90 e0       	ldi	r25, 0x00	; 0
 20a:	02 c0       	rjmp	.+4      	; 0x210 <DIO_F_Set_Pin_Val+0xc2>
 20c:	88 0f       	add	r24, r24
 20e:	99 1f       	adc	r25, r25
 210:	6a 95       	dec	r22
 212:	e2 f7       	brpl	.-8      	; 0x20c <DIO_F_Set_Pin_Val+0xbe>
 214:	82 2b       	or	r24, r18
 216:	85 bb       	out	0x15, r24	; 21
 218:	08 95       	ret
 21a:	22 b3       	in	r18, 0x12	; 18
 21c:	81 e0       	ldi	r24, 0x01	; 1
 21e:	90 e0       	ldi	r25, 0x00	; 0
 220:	02 c0       	rjmp	.+4      	; 0x226 <DIO_F_Set_Pin_Val+0xd8>
 222:	88 0f       	add	r24, r24
 224:	99 1f       	adc	r25, r25
 226:	6a 95       	dec	r22
 228:	e2 f7       	brpl	.-8      	; 0x222 <DIO_F_Set_Pin_Val+0xd4>
 22a:	82 2b       	or	r24, r18
 22c:	82 bb       	out	0x12, r24	; 18
 22e:	08 95       	ret

00000230 <DIO_F_Set_Port_Val>:
}


void DIO_F_Set_Port_Val(U8_t port_Name, U8_t value)
{
	switch (port_Name)
 230:	81 30       	cpi	r24, 0x01	; 1
 232:	41 f0       	breq	.+16     	; 0x244 <DIO_F_Set_Port_Val+0x14>
 234:	28 f0       	brcs	.+10     	; 0x240 <DIO_F_Set_Port_Val+0x10>
 236:	82 30       	cpi	r24, 0x02	; 2
 238:	39 f0       	breq	.+14     	; 0x248 <DIO_F_Set_Port_Val+0x18>
 23a:	83 30       	cpi	r24, 0x03	; 3
 23c:	39 f0       	breq	.+14     	; 0x24c <DIO_F_Set_Port_Val+0x1c>
 23e:	08 95       	ret
	{
		case PA:
		PORTA = value;
 240:	6b bb       	out	0x1b, r22	; 27
		break;
 242:	08 95       	ret
		case PB:
		PORTB = value;
 244:	68 bb       	out	0x18, r22	; 24
		break;
 246:	08 95       	ret
		case PC:
		PORTC = value;
 248:	65 bb       	out	0x15, r22	; 21
		break;
 24a:	08 95       	ret
		case PD:
		PORTD = value;
 24c:	62 bb       	out	0x12, r22	; 18
 24e:	08 95       	ret

00000250 <DIO_F_Get_Port_Val>:


U8_t DIO_F_Get_Port_Val(U8_t port_Name)
{
	U8_t val = 0;
	switch (port_Name)
 250:	81 30       	cpi	r24, 0x01	; 1
 252:	41 f0       	breq	.+16     	; 0x264 <DIO_F_Get_Port_Val+0x14>
 254:	28 f0       	brcs	.+10     	; 0x260 <DIO_F_Get_Port_Val+0x10>
 256:	82 30       	cpi	r24, 0x02	; 2
 258:	39 f0       	breq	.+14     	; 0x268 <DIO_F_Get_Port_Val+0x18>
 25a:	83 30       	cpi	r24, 0x03	; 3
 25c:	39 f0       	breq	.+14     	; 0x26c <DIO_F_Get_Port_Val+0x1c>
 25e:	08 c0       	rjmp	.+16     	; 0x270 <DIO_F_Get_Port_Val+0x20>
	{
		case PA:
		val = GET_REG(PINA);
 260:	89 b3       	in	r24, 0x19	; 25
		break;
 262:	08 95       	ret
		case PB:
		val = GET_REG(PINB);
 264:	86 b3       	in	r24, 0x16	; 22
		break;
 266:	08 95       	ret
		case PC:
		val = GET_REG(PINC);
 268:	83 b3       	in	r24, 0x13	; 19
		break;
 26a:	08 95       	ret
		case PD:
		val = GET_REG(PIND);
 26c:	80 b3       	in	r24, 0x10	; 16
		break;
 26e:	08 95       	ret
}


U8_t DIO_F_Get_Port_Val(U8_t port_Name)
{
	U8_t val = 0;
 270:	80 e0       	ldi	r24, 0x00	; 0
		default:
		break;
	}
	
	return val;
 272:	08 95       	ret

00000274 <LCD_F_Trigger>:
	while(*str != '\0')
	{
		LCD_F_Write_Char(*str);
		str++;
	}
}
 274:	41 e0       	ldi	r20, 0x01	; 1
 276:	63 e0       	ldi	r22, 0x03	; 3
 278:	81 e0       	ldi	r24, 0x01	; 1
 27a:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_F_Set_Pin_Val>
 27e:	89 ef       	ldi	r24, 0xF9	; 249
 280:	90 e0       	ldi	r25, 0x00	; 0
 282:	01 97       	sbiw	r24, 0x01	; 1
 284:	f1 f7       	brne	.-4      	; 0x282 <LCD_F_Trigger+0xe>
 286:	00 c0       	rjmp	.+0      	; 0x288 <LCD_F_Trigger+0x14>
 288:	00 00       	nop
 28a:	40 e0       	ldi	r20, 0x00	; 0
 28c:	63 e0       	ldi	r22, 0x03	; 3
 28e:	81 e0       	ldi	r24, 0x01	; 1
 290:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_F_Set_Pin_Val>
 294:	89 ef       	ldi	r24, 0xF9	; 249
 296:	90 e0       	ldi	r25, 0x00	; 0
 298:	01 97       	sbiw	r24, 0x01	; 1
 29a:	f1 f7       	brne	.-4      	; 0x298 <LCD_F_Trigger+0x24>
 29c:	00 c0       	rjmp	.+0      	; 0x29e <LCD_F_Trigger+0x2a>
 29e:	00 00       	nop
 2a0:	08 95       	ret

000002a2 <LCD_F_Write_Data>:
 2a2:	cf 93       	push	r28
 2a4:	c8 2f       	mov	r28, r24
 2a6:	41 e0       	ldi	r20, 0x01	; 1
 2a8:	61 e0       	ldi	r22, 0x01	; 1
 2aa:	81 e0       	ldi	r24, 0x01	; 1
 2ac:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_F_Set_Pin_Val>
 2b0:	6c 2f       	mov	r22, r28
 2b2:	60 7f       	andi	r22, 0xF0	; 240
 2b4:	83 e0       	ldi	r24, 0x03	; 3
 2b6:	0e 94 18 01 	call	0x230	; 0x230 <DIO_F_Set_Port_Val>
 2ba:	0e 94 3a 01 	call	0x274	; 0x274 <LCD_F_Trigger>
 2be:	6c 2f       	mov	r22, r28
 2c0:	62 95       	swap	r22
 2c2:	60 7f       	andi	r22, 0xF0	; 240
 2c4:	83 e0       	ldi	r24, 0x03	; 3
 2c6:	0e 94 18 01 	call	0x230	; 0x230 <DIO_F_Set_Port_Val>
 2ca:	0e 94 3a 01 	call	0x274	; 0x274 <LCD_F_Trigger>
 2ce:	cf 91       	pop	r28
 2d0:	08 95       	ret

000002d2 <LCD_F_Write_Char>:
 2d2:	0e 94 51 01 	call	0x2a2	; 0x2a2 <LCD_F_Write_Data>
 2d6:	08 95       	ret

000002d8 <LCD_F_Write_Number>:
		LCD_F_Write_Command(0x80 + 0x40 + cell);
	}
}

void LCD_F_Write_Number(S32_t num)
{
 2d8:	cf 92       	push	r12
 2da:	df 92       	push	r13
 2dc:	ef 92       	push	r14
 2de:	ff 92       	push	r15
 2e0:	1f 93       	push	r17
 2e2:	cf 93       	push	r28
 2e4:	df 93       	push	r29
 2e6:	cd b7       	in	r28, 0x3d	; 61
 2e8:	de b7       	in	r29, 0x3e	; 62
 2ea:	2a 97       	sbiw	r28, 0x0a	; 10
 2ec:	0f b6       	in	r0, 0x3f	; 63
 2ee:	f8 94       	cli
 2f0:	de bf       	out	0x3e, r29	; 62
 2f2:	0f be       	out	0x3f, r0	; 63
 2f4:	cd bf       	out	0x3d, r28	; 61
 2f6:	6b 01       	movw	r12, r22
 2f8:	7c 01       	movw	r14, r24
	U8_t rem = 0;
	S8_t arr[10];
	S8_t i = 0;
	if(num == 0)
 2fa:	61 15       	cp	r22, r1
 2fc:	71 05       	cpc	r23, r1
 2fe:	81 05       	cpc	r24, r1
 300:	91 05       	cpc	r25, r1
 302:	21 f4       	brne	.+8      	; 0x30c <LCD_F_Write_Number+0x34>
	{
		LCD_F_Write_Char('0');
 304:	80 e3       	ldi	r24, 0x30	; 48
 306:	0e 94 69 01 	call	0x2d2	; 0x2d2 <LCD_F_Write_Char>
 30a:	3d c0       	rjmp	.+122    	; 0x386 <LCD_F_Write_Number+0xae>
		return;
	}
	else if(num < 0)
 30c:	99 23       	and	r25, r25
 30e:	5c f4       	brge	.+22     	; 0x326 <LCD_F_Write_Number+0x4e>
	{
		num*= -1;
 310:	f0 94       	com	r15
 312:	e0 94       	com	r14
 314:	d0 94       	com	r13
 316:	c0 94       	com	r12
 318:	c1 1c       	adc	r12, r1
 31a:	d1 1c       	adc	r13, r1
 31c:	e1 1c       	adc	r14, r1
 31e:	f1 1c       	adc	r15, r1
		LCD_F_Write_Char('-');
 320:	8d e2       	ldi	r24, 0x2D	; 45
 322:	0e 94 69 01 	call	0x2d2	; 0x2d2 <LCD_F_Write_Char>
		LCD_F_Write_Command(0x80 + 0x40 + cell);
	}
}

void LCD_F_Write_Number(S32_t num)
{
 326:	10 e0       	ldi	r17, 0x00	; 0
 328:	17 c0       	rjmp	.+46     	; 0x358 <LCD_F_Write_Number+0x80>
		LCD_F_Write_Char('-');
	}
	
	while (num > 0)
	{
		rem = num % 10;
 32a:	c7 01       	movw	r24, r14
 32c:	b6 01       	movw	r22, r12
 32e:	2a e0       	ldi	r18, 0x0A	; 10
 330:	30 e0       	ldi	r19, 0x00	; 0
 332:	40 e0       	ldi	r20, 0x00	; 0
 334:	50 e0       	ldi	r21, 0x00	; 0
 336:	0e 94 56 02 	call	0x4ac	; 0x4ac <__divmodsi4>
		rem = rem + '0';
 33a:	60 5d       	subi	r22, 0xD0	; 208
		arr[i] = (char)rem;
 33c:	e1 e0       	ldi	r30, 0x01	; 1
 33e:	f0 e0       	ldi	r31, 0x00	; 0
 340:	ec 0f       	add	r30, r28
 342:	fd 1f       	adc	r31, r29
 344:	e1 0f       	add	r30, r17
 346:	f1 1d       	adc	r31, r1
 348:	17 fd       	sbrc	r17, 7
 34a:	fa 95       	dec	r31
 34c:	60 83       	st	Z, r22
		num = num / 10;
 34e:	c2 2e       	mov	r12, r18
 350:	d3 2e       	mov	r13, r19
 352:	e4 2e       	mov	r14, r20
 354:	f5 2e       	mov	r15, r21
		i++;
 356:	1f 5f       	subi	r17, 0xFF	; 255
	{
		num*= -1;
		LCD_F_Write_Char('-');
	}
	
	while (num > 0)
 358:	1c 14       	cp	r1, r12
 35a:	1d 04       	cpc	r1, r13
 35c:	1e 04       	cpc	r1, r14
 35e:	1f 04       	cpc	r1, r15
 360:	24 f3       	brlt	.-56     	; 0x32a <LCD_F_Write_Number+0x52>
		arr[i] = (char)rem;
		num = num / 10;
		i++;
	}
	
	for(S8_t j=i-1; j>=0; j--) /*j>=0, j must be a signed number*/
 362:	ff 24       	eor	r15, r15
 364:	fa 94       	dec	r15
 366:	f1 0e       	add	r15, r17
 368:	0c c0       	rjmp	.+24     	; 0x382 <LCD_F_Write_Number+0xaa>
	{
		LCD_F_Write_Char(arr[j]);
 36a:	e1 e0       	ldi	r30, 0x01	; 1
 36c:	f0 e0       	ldi	r31, 0x00	; 0
 36e:	ec 0f       	add	r30, r28
 370:	fd 1f       	adc	r31, r29
 372:	ef 0d       	add	r30, r15
 374:	f1 1d       	adc	r31, r1
 376:	f7 fc       	sbrc	r15, 7
 378:	fa 95       	dec	r31
 37a:	80 81       	ld	r24, Z
 37c:	0e 94 69 01 	call	0x2d2	; 0x2d2 <LCD_F_Write_Char>
		arr[i] = (char)rem;
		num = num / 10;
		i++;
	}
	
	for(S8_t j=i-1; j>=0; j--) /*j>=0, j must be a signed number*/
 380:	fa 94       	dec	r15
 382:	ff 20       	and	r15, r15
 384:	94 f7       	brge	.-28     	; 0x36a <LCD_F_Write_Number+0x92>
	{
		LCD_F_Write_Char(arr[j]);
	}
}
 386:	2a 96       	adiw	r28, 0x0a	; 10
 388:	0f b6       	in	r0, 0x3f	; 63
 38a:	f8 94       	cli
 38c:	de bf       	out	0x3e, r29	; 62
 38e:	0f be       	out	0x3f, r0	; 63
 390:	cd bf       	out	0x3d, r28	; 61
 392:	df 91       	pop	r29
 394:	cf 91       	pop	r28
 396:	1f 91       	pop	r17
 398:	ff 90       	pop	r15
 39a:	ef 90       	pop	r14
 39c:	df 90       	pop	r13
 39e:	cf 90       	pop	r12
 3a0:	08 95       	ret

000003a2 <LCD_F_Write_Command>:
// 	DIO_F_Set_Pin_Val(LCD_PORT, LCD_D4, GET_BIT(data, 0));
//  	LCD_F_Trigger();
}

void LCD_F_Write_Command(U8_t command)
{
 3a2:	cf 93       	push	r28
 3a4:	c8 2f       	mov	r28, r24
	DIO_F_Set_Pin_Val(LCD_CONTROL_PORT, LCD_RS, LOW); // command
 3a6:	40 e0       	ldi	r20, 0x00	; 0
 3a8:	61 e0       	ldi	r22, 0x01	; 1
 3aa:	81 e0       	ldi	r24, 0x01	; 1
 3ac:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_F_Set_Pin_Val>

//	DIO_F_Set_Pin_Val(LCD_PORT, LCD_D7, GET_BIT(command, 7));
// 	DIO_F_Set_Pin_Val(LCD_PORT, LCD_D6, GET_BIT(command, 6));
// 	DIO_F_Set_Pin_Val(LCD_PORT, LCD_D5, GET_BIT(command, 5));
// 	DIO_F_Set_Pin_Val(LCD_PORT, LCD_D4, GET_BIT(command, 4));
	DIO_F_Set_Port_Val(LCD_PORT, command & 0xF0);
 3b0:	6c 2f       	mov	r22, r28
 3b2:	60 7f       	andi	r22, 0xF0	; 240
 3b4:	83 e0       	ldi	r24, 0x03	; 3
 3b6:	0e 94 18 01 	call	0x230	; 0x230 <DIO_F_Set_Port_Val>
 	LCD_F_Trigger();
 3ba:	0e 94 3a 01 	call	0x274	; 0x274 <LCD_F_Trigger>
// 	DIO_F_Set_Pin_Val(LCD_PORT, LCD_D7, GET_BIT(command, 3));
// 	DIO_F_Set_Pin_Val(LCD_PORT, LCD_D6, GET_BIT(command, 2));
// 	DIO_F_Set_Pin_Val(LCD_PORT, LCD_D5, GET_BIT(command, 1));
// 	DIO_F_Set_Pin_Val(LCD_PORT, LCD_D4, GET_BIT(command, 0));
	DIO_F_Set_Port_Val(LCD_PORT, command<<4);
 3be:	6c 2f       	mov	r22, r28
 3c0:	62 95       	swap	r22
 3c2:	60 7f       	andi	r22, 0xF0	; 240
 3c4:	83 e0       	ldi	r24, 0x03	; 3
 3c6:	0e 94 18 01 	call	0x230	; 0x230 <DIO_F_Set_Port_Val>
	LCD_F_Trigger();
 3ca:	0e 94 3a 01 	call	0x274	; 0x274 <LCD_F_Trigger>
}
 3ce:	cf 91       	pop	r28
 3d0:	08 95       	ret

000003d2 <LCD_F_Init>:
#if LCD_MODE==_4_BIT_MODE


void LCD_F_Init(void)
{
	DIO_F_Set_Pin_Dir(LCD_CONTROL_PORT, LCD_E, OUTPUT);
 3d2:	41 e0       	ldi	r20, 0x01	; 1
 3d4:	63 e0       	ldi	r22, 0x03	; 3
 3d6:	81 e0       	ldi	r24, 0x01	; 1
 3d8:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_F_Set_Pin_Dir>
	DIO_F_Set_Pin_Dir(LCD_CONTROL_PORT, LCD_RW, OUTPUT);
 3dc:	41 e0       	ldi	r20, 0x01	; 1
 3de:	62 e0       	ldi	r22, 0x02	; 2
 3e0:	81 e0       	ldi	r24, 0x01	; 1
 3e2:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_F_Set_Pin_Dir>
	DIO_F_Set_Pin_Dir(LCD_CONTROL_PORT, LCD_RS, OUTPUT);
 3e6:	41 e0       	ldi	r20, 0x01	; 1
 3e8:	61 e0       	ldi	r22, 0x01	; 1
 3ea:	81 e0       	ldi	r24, 0x01	; 1
 3ec:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_F_Set_Pin_Dir>
	
	DIO_F_Set_Pin_Dir(LCD_PORT, LCD_D4, OUTPUT);
 3f0:	41 e0       	ldi	r20, 0x01	; 1
 3f2:	64 e0       	ldi	r22, 0x04	; 4
 3f4:	83 e0       	ldi	r24, 0x03	; 3
 3f6:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_F_Set_Pin_Dir>
	DIO_F_Set_Pin_Dir(LCD_PORT, LCD_D5, OUTPUT);
 3fa:	41 e0       	ldi	r20, 0x01	; 1
 3fc:	65 e0       	ldi	r22, 0x05	; 5
 3fe:	83 e0       	ldi	r24, 0x03	; 3
 400:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_F_Set_Pin_Dir>
	DIO_F_Set_Pin_Dir(LCD_PORT, LCD_D6, OUTPUT);
 404:	41 e0       	ldi	r20, 0x01	; 1
 406:	66 e0       	ldi	r22, 0x06	; 6
 408:	83 e0       	ldi	r24, 0x03	; 3
 40a:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_F_Set_Pin_Dir>
	DIO_F_Set_Pin_Dir(LCD_PORT, LCD_D7, OUTPUT);
 40e:	41 e0       	ldi	r20, 0x01	; 1
 410:	67 e0       	ldi	r22, 0x07	; 7
 412:	83 e0       	ldi	r24, 0x03	; 3
 414:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_F_Set_Pin_Dir>
	
	DIO_F_Set_Pin_Val(LCD_CONTROL_PORT, LCD_RW, LOW); // always write on lcd
 418:	40 e0       	ldi	r20, 0x00	; 0
 41a:	62 e0       	ldi	r22, 0x02	; 2
 41c:	81 e0       	ldi	r24, 0x01	; 1
 41e:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_F_Set_Pin_Val>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 422:	83 ed       	ldi	r24, 0xD3	; 211
 424:	90 e3       	ldi	r25, 0x30	; 48
 426:	01 97       	sbiw	r24, 0x01	; 1
 428:	f1 f7       	brne	.-4      	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 42a:	00 c0       	rjmp	.+0      	; 0x42c <__EEPROM_REGION_LENGTH__+0x2c>
 42c:	00 00       	nop
	
	_delay_ms(50); // powering on sequence page 13
	LCD_F_Write_Command(0x02);
 42e:	82 e0       	ldi	r24, 0x02	; 2
 430:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <LCD_F_Write_Command>
	LCD_F_Write_Command(0x28); //4-bit mode|2 lines|5*7;
 434:	88 e2       	ldi	r24, 0x28	; 40
 436:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <LCD_F_Write_Command>
	LCD_F_Write_Command(0x0C); //Display on|cursor off|Blinking on
 43a:	8c e0       	ldi	r24, 0x0C	; 12
 43c:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <LCD_F_Write_Command>
	LCD_F_Write_Command(0x01);
 440:	81 e0       	ldi	r24, 0x01	; 1
 442:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <LCD_F_Write_Command>
 446:	89 ef       	ldi	r24, 0xF9	; 249
 448:	90 e0       	ldi	r25, 0x00	; 0
 44a:	01 97       	sbiw	r24, 0x01	; 1
 44c:	f1 f7       	brne	.-4      	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
 44e:	00 c0       	rjmp	.+0      	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
 450:	00 00       	nop
	_delay_ms(1);
	LCD_F_Write_Command(0x06); //Increase address | no shift the entire display
 452:	86 e0       	ldi	r24, 0x06	; 6
 454:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <LCD_F_Write_Command>
 458:	08 95       	ret

0000045a <main>:
#include <util/delay.h>


int main(void)
{
	LCD_F_Init();
 45a:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <LCD_F_Init>
	DIO_F_Set_Pin_Dir(PA,PIN_0,INPUT);
 45e:	40 e0       	ldi	r20, 0x00	; 0
 460:	60 e0       	ldi	r22, 0x00	; 0
 462:	80 e0       	ldi	r24, 0x00	; 0
 464:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_F_Set_Pin_Dir>
	DIO_F_Set_Pin_Dir(PA,PIN_1,INPUT);
 468:	40 e0       	ldi	r20, 0x00	; 0
 46a:	61 e0       	ldi	r22, 0x01	; 1
 46c:	80 e0       	ldi	r24, 0x00	; 0
 46e:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_F_Set_Pin_Dir>
	DIO_F_Set_Pin_Dir(PA,PIN_2,INPUT);
 472:	40 e0       	ldi	r20, 0x00	; 0
 474:	62 e0       	ldi	r22, 0x02	; 2
 476:	80 e0       	ldi	r24, 0x00	; 0
 478:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_F_Set_Pin_Dir>
	DIO_F_Set_Pin_Dir(PA,PIN_3,INPUT);
 47c:	40 e0       	ldi	r20, 0x00	; 0
 47e:	63 e0       	ldi	r22, 0x03	; 3
 480:	80 e0       	ldi	r24, 0x00	; 0
 482:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_F_Set_Pin_Dir>
    
    while (1) 
    {
		LCD_F_Write_Number(DIO_F_Get_Port_Val(PA));
 486:	80 e0       	ldi	r24, 0x00	; 0
 488:	0e 94 28 01 	call	0x250	; 0x250 <DIO_F_Get_Port_Val>
 48c:	68 2f       	mov	r22, r24
 48e:	70 e0       	ldi	r23, 0x00	; 0
 490:	80 e0       	ldi	r24, 0x00	; 0
 492:	90 e0       	ldi	r25, 0x00	; 0
 494:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <LCD_F_Write_Number>
 498:	8f e4       	ldi	r24, 0x4F	; 79
 49a:	93 ec       	ldi	r25, 0xC3	; 195
 49c:	01 97       	sbiw	r24, 0x01	; 1
 49e:	f1 f7       	brne	.-4      	; 0x49c <main+0x42>
 4a0:	00 c0       	rjmp	.+0      	; 0x4a2 <main+0x48>
 4a2:	00 00       	nop
		_delay_ms(200);
		LCD_F_Write_Command(0x01);
 4a4:	81 e0       	ldi	r24, 0x01	; 1
 4a6:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <LCD_F_Write_Command>
 4aa:	ed cf       	rjmp	.-38     	; 0x486 <main+0x2c>

000004ac <__divmodsi4>:
 4ac:	05 2e       	mov	r0, r21
 4ae:	97 fb       	bst	r25, 7
 4b0:	1e f4       	brtc	.+6      	; 0x4b8 <__divmodsi4+0xc>
 4b2:	00 94       	com	r0
 4b4:	0e 94 6d 02 	call	0x4da	; 0x4da <__negsi2>
 4b8:	57 fd       	sbrc	r21, 7
 4ba:	07 d0       	rcall	.+14     	; 0x4ca <__divmodsi4_neg2>
 4bc:	0e 94 75 02 	call	0x4ea	; 0x4ea <__udivmodsi4>
 4c0:	07 fc       	sbrc	r0, 7
 4c2:	03 d0       	rcall	.+6      	; 0x4ca <__divmodsi4_neg2>
 4c4:	4e f4       	brtc	.+18     	; 0x4d8 <__divmodsi4_exit>
 4c6:	0c 94 6d 02 	jmp	0x4da	; 0x4da <__negsi2>

000004ca <__divmodsi4_neg2>:
 4ca:	50 95       	com	r21
 4cc:	40 95       	com	r20
 4ce:	30 95       	com	r19
 4d0:	21 95       	neg	r18
 4d2:	3f 4f       	sbci	r19, 0xFF	; 255
 4d4:	4f 4f       	sbci	r20, 0xFF	; 255
 4d6:	5f 4f       	sbci	r21, 0xFF	; 255

000004d8 <__divmodsi4_exit>:
 4d8:	08 95       	ret

000004da <__negsi2>:
 4da:	90 95       	com	r25
 4dc:	80 95       	com	r24
 4de:	70 95       	com	r23
 4e0:	61 95       	neg	r22
 4e2:	7f 4f       	sbci	r23, 0xFF	; 255
 4e4:	8f 4f       	sbci	r24, 0xFF	; 255
 4e6:	9f 4f       	sbci	r25, 0xFF	; 255
 4e8:	08 95       	ret

000004ea <__udivmodsi4>:
 4ea:	a1 e2       	ldi	r26, 0x21	; 33
 4ec:	1a 2e       	mov	r1, r26
 4ee:	aa 1b       	sub	r26, r26
 4f0:	bb 1b       	sub	r27, r27
 4f2:	fd 01       	movw	r30, r26
 4f4:	0d c0       	rjmp	.+26     	; 0x510 <__udivmodsi4_ep>

000004f6 <__udivmodsi4_loop>:
 4f6:	aa 1f       	adc	r26, r26
 4f8:	bb 1f       	adc	r27, r27
 4fa:	ee 1f       	adc	r30, r30
 4fc:	ff 1f       	adc	r31, r31
 4fe:	a2 17       	cp	r26, r18
 500:	b3 07       	cpc	r27, r19
 502:	e4 07       	cpc	r30, r20
 504:	f5 07       	cpc	r31, r21
 506:	20 f0       	brcs	.+8      	; 0x510 <__udivmodsi4_ep>
 508:	a2 1b       	sub	r26, r18
 50a:	b3 0b       	sbc	r27, r19
 50c:	e4 0b       	sbc	r30, r20
 50e:	f5 0b       	sbc	r31, r21

00000510 <__udivmodsi4_ep>:
 510:	66 1f       	adc	r22, r22
 512:	77 1f       	adc	r23, r23
 514:	88 1f       	adc	r24, r24
 516:	99 1f       	adc	r25, r25
 518:	1a 94       	dec	r1
 51a:	69 f7       	brne	.-38     	; 0x4f6 <__udivmodsi4_loop>
 51c:	60 95       	com	r22
 51e:	70 95       	com	r23
 520:	80 95       	com	r24
 522:	90 95       	com	r25
 524:	9b 01       	movw	r18, r22
 526:	ac 01       	movw	r20, r24
 528:	bd 01       	movw	r22, r26
 52a:	cf 01       	movw	r24, r30
 52c:	08 95       	ret

0000052e <_exit>:
 52e:	f8 94       	cli

00000530 <__stop_program>:
 530:	ff cf       	rjmp	.-2      	; 0x530 <__stop_program>
